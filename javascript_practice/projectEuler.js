// Utility functions

const isPrime = num => {
  for (let i = 2; i * i <= num; i++) {
    if (num % i === 0) {
      return false;
    }
  }
  return true;
};

const reverseString = string => {
  let array = string.split('');
  let tempArray = [];
  array.forEach(letter => {
    tempArray.unshift(letter);
  });
  return tempArray.join('');
};

const reverseArray = array => {
  let newArray = [];
  array.forEach(element => {
    newArray.unshift(element);
  });
  return newArray;
}; 

const isDivisible = (num, limit) => {
  for (let i = 1; i <= limit; i++) {
    if (num % i !== 0) {
      return false;
    }
  }
  return true;
};



// Find the largest palindrome made from the product of two 3-digit numbers.

// ----------------------------------------------------------------------------

// 1. Multiples of 3 and 5
// If we list all the natural numbers below 10 that are multiples of 3 or 5,
// we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.

// let sum = 0;
// let limit = 1000;

// for (let i = 0; i < limit; i++) {
//   if (i % 3 === 0 || i % 5 === 0) {
//     sum += i;
//   }
// }
// console.log(sum);

// ----------------------------------------------------------------------------

// 2. Even Fibonacci numbers
// Each new term in the Fibonacci sequence is generated by adding the
// previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.

// let sum = 0;
// let a = 1;
// let b = 2;
// let limit = 4000000;

// while (b < limit) {
//   if (b % 2 === 0) {
//     sum += b;
//   }
//   let temp = a + b;
//   a = b;
//   b = temp;
// }
// console.log(sum);

// ----------------------------------------------------------------------------

// 3. Largest prime factor
// The prime factors of 13195 are 5, 7, 13 and 29.
// What is the largest prime factor of the number 600851475143 ?

// let largest = 'There are no prime factors';
// let limit = 600851475143;

// for (let i = 0; i * i <= limit; i++) {
//   if (limit % i === 0 && isPrime(i)) {
//     largest = i;
//   }
// }

// console.log(largest);

// ----------------------------------------------------------------------------

// 4. Largest palindrome product
// A palindromic number reads the same both ways. The largest palindrome made
// from the product of two 2-digit numbers is 9009 = 91 × 99.

// let largest = 'No palindrome found';
// for (let i = 100; i < 1000; i++) {
//   for (let j = 100; j < 1000; j++) {
//     let tempString = (i * j).toString();
//     if (tempString === reverseString(tempString)) {
//       largest = i * j;
//     }
//   }
// }
// console.log(largest);

// ----------------------------------------------------------------------------

// 5. Smallest multiple
// 2520 is the smallest number that can be divided by each of the numbers from 
// 1 to 10 without any remainder. What is the smallest positive number that is 
// evenly divisible by all of the numbers from 1 to 20?

// let counter = 1;
// while(!isDivisible(counter, 20)) {
//   counter ++;
// }
// console.log(counter)

// ----------------------------------------------------------------------------

// 6. Sum square difference
// The sum of the squares of the first ten natural numbers is,
// 1^2 + 2^2 + ... + 10^2 = 385
// The square of the sum of the first ten natural numbers is,
// (1 + 2 + ... + 10)^2 = 55^2 = 3025
// Hence the difference between the sum of the squares of the first ten natural 
// numbers and the square of the sum is 3025 − 385 = 2640.
// Find the difference between the sum of the squares of the first one hundred 
// natural numbers and the square of the sum.

// let sum = 0;
// let sumOfSquares = 0;

// for (let i = 0; i <= 100; i++) {
//   sum += i;
//   sumOfSquares += i ** 2;
// }

// console.log(sum ** 2 - sumOfSquares);